/* *****************************************************************************
** Project      : Analytice AnaGate
** File         : AnaGate.h
** Author       : Thomas Weber
** Copyright    : (C) 2005 by Analytica GmbH
********************************************************************************
** $Id: AnaGate.h,v 1.22 2009/04/08 15:56:37 stefanwelisch Exp $
**
** $Log: AnaGate.h,v $
** Revision 1.22  2009/04/08 15:56:37  stefanwelisch
** OP-Codes fuer AnagateDisplay added
**
** Revision 1.21  2008/11/26 07:09:01  axelschmidt
** universal programmer
**
** Revision 1.20  2008/05/14 15:17:02  stefanwelisch
** neue OP-Codes f�r Z-Card Image hinzugef�gt
** Define f�r maximale Anzahl der Ports am Anagate hinzugef�gt
**
** Revision 1.19  2007/10/25 12:41:28  axelschmidt
** Renesas block erase added
**
** Revision 1.18  2007/06/05 14:02:35  axelschmidt
** ANAGATE_DEVICE_MAX defined
**
** Revision 1.17  2007/05/22 13:50:16  axelschmidt
** Renesas commands
**
** Revision 1.16  2006/04/07 14:04:36  axelschmidt
** new command
**
** Revision 1.15  2006/04/07 13:52:58  axelschmidt
** Schreibfehler
**
** Revision 1.14  2006/03/06 14:45:54  axelschmidt
** new device AnaGate AD
**
** Revision 1.13  2005/12/27 08:27:13  AxelSchmidt
** base functions of SPI interface
**
** Revision 1.12  2005/11/30 10:14:08  axelschmidt
** new I2C command
**
** Revision 1.11  2005/11/28 17:07:03  axelschmidt
** device info structure changed
**
** Revision 1.10  2005/11/18 15:25:46  axelschmidt
** back to last version
**
** Revision 1.9  2005/11/17 14:48:08  axelschmidt
** .
**
** Revision 1.8  2005/09/16 09:18:50  axelschmidt
** Digital IO support for I2C and CAN
**
** Revision 1.7  2005/08/10 15:44:29  axelschmidt
** get_globals op code
**
** Revision 1.6  2005/08/04 09:52:35  axelschmidt
** new DIO op codes
**
** Revision 1.5  2005/08/02 13:46:50  axelschmidt
** MAC-Address 6 bytes
**
** Revision 1.4  2005/07/25 06:48:06  AxelSchmidt
** CAN spezifische OP-Codes
**
** Revision 1.3  2005/07/22 11:47:36  axelschmidt
** Command-Codes auf TCP-Protokoll 2.0 ver�ndert
**
** Revision 1.2  2005/07/22 07:16:20  AxelSchmidt
** structure defined
**
** Revision 1.1  2005/07/11 16:17:52  axelschmidt
** initial
**
*******************************************************************************/

#ifndef AnaGate_h
#define AnaGate_h

// platform-independent fixed-size integer types
#ifdef _MSC_VER
typedef signed __int8      AnaInt8;
typedef signed __int16     AnaInt16;
typedef signed __int32     AnaInt32;
typedef signed __int64     AnaInt64;

typedef unsigned __int8    AnaUInt8;
typedef unsigned __int16   AnaUInt16;
typedef unsigned __int32   AnaUInt32;
typedef unsigned __int64   AnaUInt64;

#else
#ifdef __KERNEL__
#  include <linux/types.h>
#else
   // C99 standard header, may not be included with all (especially older) compilers.
#  include <stdint.h>
#endif

typedef int8_t             AnaInt8;
typedef int16_t            AnaInt16;
typedef int32_t            AnaInt32;
typedef int64_t            AnaInt64;

typedef uint8_t            AnaUInt8;
typedef uint16_t           AnaUInt16;
typedef uint32_t           AnaUInt32;
typedef uint64_t           AnaUInt64;

#endif

/** Start der PORT Adressen der AnaGate Serie */
#define ANAGATE_PORT        4999


/** AnaGate devices */
enum EAnaGateDevice
{
   DEVICE_ANAGATE_I2C              =  1, ///< AnaGate I2C
   DEVICE_ANAGATE_CAN              =  2, ///< AnaGate CAN
   DEVICE_ANAGATE_SPI              =  3, ///< AnaGate SPI
   DEVICE_ANAGATE_RS232            =  4, ///< AnaGate RS232
   DEVICE_ANAGATE_DIGIO            =  5, ///< AnaGate DIGIO
   DEVICE_ANAGATE_AUDIO            =  6, ///< AnaGate AUDIO
   DEVICE_ANAGATE_AD               =  7, ///< AnaGate A/D
   DEVICE_ANAGATE_UNIPGM           =  8, ///< AnaGate Universal Programmer
   DEVICE_ANAGATE_RENESAS          =  9, ///< AnaGate Renesas
   DEVICE_ANAGATE_DISPLAY          = 10, ///< AnaGate Display
   DEVICE_ANAGATE_BOARD_TEST_IO    = 11, ///< AnaGate Test System IO
   DEVICE_ANAGATE_BOARD_TEST_PWR   = 12, ///< AnaGate Test System PWR
   DEVICE_ANAGATE_BOARD_TEST_COM   = 13, ///< AnaGate Test System Communication Board
   DEVICE_ANAGATE_AWIRE            = 14, ///< AnaGate aWire Programmer
   DEVICE_ANAGATE_PROFINET_ZCARD   = 15, ///< AnaGate PROFINET Z-Card 
   DEVICE_ANAGATE_PC3_PROG         = 16, ///< AnaGate PC3 Programmer
   DEVICE_ANAGATE_BOARD_TEST_RELAY = 17, ///< AnaGate Test System Relay
   DEVICE_ANAGATE_MAX              = 17
};

/** AnaGate ethernet protocol */
enum EEthernetProtocol
{
   PROT_TCP = 1,   ///< Layer4 protocool TCP (SOCK_STREAM)
   PROT_UDP = 2    ///< Layer4 protocool UDP (SOCK_DGRAM)
};

/** enum ConState definiert die möglichen Verbindungszustände              */
enum EConState
{
   eDisconnected = 1,   /**< Verbindung ist nicht hergestellt (idle)          */
   eConnecting,         /**< Verbindung wird gerade versucht herzustellen     */
   eConnected,          /**< Verbindung ist hergestellt (idle)                */
   eDisconnecting,      /**< Verbindung wird gerade abgebaut                  */
   eClassNotInitialized /**< Klasse ist nicht korrekt initialisiert           */
};


/** AnaGate commands */
enum EAnaGateCommand
{
   // standard command
   CMD_ANAGATE_OPEN              =  0x1,    ///< open command.
   CMD_ANAGATE_CLOSE             =  0x2,    ///< close command
   CMD_ANAGATE_DATA              =  0x3,    ///< data command
   CMD_ANAGATE_RESET             =  0x4,    ///< reset command
   CMD_ANAGATE_SET_CONFIG        =  0x5,    ///< write config command.
   CMD_ANAGATE_GET_CONFIG        =  0x6,    ///< read config command
   CMD_ANAGATE_SET_GLOBALS       =  0x7,    ///< write global config command.
   CMD_ANAGATE_GET_GLOBALS       =  0x8,    ///< read global config command
   CMD_ANAGATE_GET_INFO          =  0x9,    ///< read info/version
   CMD_ANAGATE_GET_STATUS        =  0xA,    ///< read status information
   CMD_ANAGATE_SET_TIME          =  0xB,    ///< write time
   CMD_ANAGATE_RESTART           =  0xC,    ///< restart SW
   CMD_ANAGATE_ALIVE             =  0xD,    ///< write alive command
   CMD_ANAGATE_GET_TIME          =  0xE,    ///< read time

   // special commands for I2C
   CMD_ANAGATE_I2C_READ                   =  0x10, ///< I2C read command.
   CMD_ANAGATE_I2C_WRITE                  =  0x11, ///< I2C write command
   CMD_ANAGATE_I2C_READ_EEPROM            =  0x12, ///< I2C EEPROM read command.
   CMD_ANAGATE_I2C_WRITE_EEPROM           =  0x13, ///< I2C EEPROM write command
   CMD_ANAGATE_I2C_SEQUENCE               =  0x14, ///< I2C sequence command
	CMD_ANAGATE_I2C_RAW_START              =  0x15, ///< I2C RAW start command
	CMD_ANAGATE_I2C_RAW_SEND               =  0x16, ///< I2C RAW send command
	CMD_ANAGATE_I2C_RAW_GET                =  0x17, ///< I2C RAW get command
	CMD_ANAGATE_I2C_RAW_STOP               =  0x18, ///< I2C RAW stop command
   CMD_ANAGATE_I2C_WRITE_EEPROM_POLL_ACK  =  0x19, ///< I2C EEPROM write with acknowledge polling command

   // special commands for CAN
   CMD_ANAGATE_CAN_SET_FILTER              = 0x20,  ///< Set Filter
   CMD_ANAGATE_CAN_GET_FILTER              = 0x21,  ///< Get Filter
   CMD_ANAGATE_CAN_GET_POWERSTATUS         = 0x22,  ///< Get power status
   CMD_ANAGATE_CAN_SET_POWERRELAY          = 0x23,  ///< Set power relay
   CMD_ANAGATE_CAN_SET_POWERACTIVESUPPLIES = 0x24,  ///< Set active power supplies

   // special commands for CAN PI
   CMD_ANAGATE_ZCARD_PI_DATA      = 0x50,  ///< Z-Card Process Image Date
   CMD_ANAGATE_SET_ZCARD_PI       = 0x51,  ///< Set Z-Card Process Image Parameters
   CMD_ANAGATE_GET_ZCARD_PI       = 0x52,  ///< Get Z-Card Process Image Parameters

   // special commands for CAN CANOpen
   CMD_ANAGATE_CANOPEN_SET_CONFIG      = 0x60,  ///< Set CANOpen config
   CMD_ANAGATE_CANOPEN_GET_CONFIG      = 0x61,  ///< Get CANOpen config
   CMD_ANAGATE_CANOPEN_SYNC_MODE       = 0x62,  ///< Set CANOpen SYNC Modus
   CMD_ANAGATE_CANOPEN_NMT             = 0x63,  ///< Send CANOpen NMT
   CMD_ANAGATE_CANOPEN_SYNC            = 0x64,  ///< Send CANOpen SYNC
   CMD_ANAGATE_CANOPEN_TIME            = 0x65,  ///< Send CANOpen TIME
   CMD_ANAGATE_CANOPEN_EMCY            = 0x66,  ///< Send CANOpen EMCY
   CMD_ANAGATE_CANOPEN_PDO             = 0x67,  ///< Send CANOpen PDO
   CMD_ANAGATE_CANOPEN_SDO_READ        = 0x68,  ///< Send CANOpen SDO READ
   CMD_ANAGATE_CANOPEN_SDO_WRITE       = 0x69,  ///< Send CANOpen SDO WRITE
   CMD_ANAGATE_CANOPEN_SDO_READ_BLOCK  = 0x6A,  ///< Send CANOpen SDO READ BLOCK
   CMD_ANAGATE_CANOPEN_SDO_WRITE_BLOCK = 0x6B,  ///< Send CANOpen SDO WRITE BLOCK
   CMD_ANAGATE_CANOPEN_GUARD           = 0x6C,  ///< Send CANOpen Guard
   CMD_ANAGATE_CANOPEN_UNDEFINED       = 0x6D,  ///< Send CANOpen Undefined

   // special commands for Renesas
   CMD_ANAGATE_RENESAS_INIT        = 0x20,  ///< Perform Init Procedure for starting programming
   CMD_ANAGATE_RENESAS_CHECK_ID    = 0x21,  ///< Check ID to unlock uC
   CMD_ANAGATE_RENESAS_SET_BAUD    = 0x22,  ///< Change Baudrate
   CMD_ANAGATE_RENESAS_PAGE_READ   = 0x23,  ///< Read a page of uC
   CMD_ANAGATE_RENESAS_ERASE_ALL   = 0x24,  ///< Perform a Erase all Block command
   CMD_ANAGATE_RENESAS_PAGE_PROG   = 0x25,  ///< Programs a page to the uC
   CMD_ANAGATE_RENESAS_GET_VERS    = 0x26,  ///< Returns the Version of the uC Boot load
   CMD_ANAGATE_RENESAS_COMPLETE    = 0x27,  ///< Peforms the completion command
   CMD_ANAGATE_RENESAS_VERIFYCHK   = 0x28,  ///< Peforms the verify check command
   CMD_ANAGATE_RENESAS_BLOCK_ERASE = 0x29,  ///< Peforms the block erase command

   // special commands for AD
   CMD_ANAGATE_AD_READ           =  0x30, ///< analogue read command.

   // special commands for DIGIO/I2C/CAN/SPI/RS232
   CMD_ANAGATE_DIO_READ          =  0x40, ///< DIO read command.
   CMD_ANAGATE_DIO_WRITE         =  0x41, ///< DIO write command
   CMD_ANAGATE_AIO_READ          =  0x42, ///< AIO read command
   CMD_ANAGATE_AIO_WRITE         =  0x43, ///< AIO write command

   // special commands for Display
   CMD_ANAGATE_DISPLAY_SET_BITMAP =  0x10, ///< SetBitmap command
   CMD_ANAGATE_DISPLAY_GET_BITMAP =  0x11, ///< GetBitmap command
   CMD_ANAGATE_DISPLAY_SET_CONFIG =  0x12, ///< SetConfig command
   CMD_ANAGATE_DISPLAY_GET_CONFIG =  0x13, ///< GetConfig command
   CMD_ANAGATE_DISPLAY_SWITCH_OFF =  0x14, ///< Switch off command (Display switch off the heating)
   CMD_ANAGATE_DISPLAY_ALIVE      =  0x20, ///< Alive command

   // special commands for BoardTester
   CMD_ANAGATE_BOARD_TEST_SET_ANALOG =  0x10, ///< SetAnalog command
   CMD_ANAGATE_BOARD_TEST_GET_ANALOG =  0x11, ///< GetAnalog command
   CMD_ANAGATE_BOARD_TEST_SET_RELAY  =  0x12, ///< SetRelay  command
   CMD_ANAGATE_BOARD_TEST_GET_BUTTON =  0x13, ///< GetButton command
   CMD_ANAGATE_BOARD_TEST_SET_POWER  =  0x20, ///< SetPower  command
   CMD_ANAGATE_BOARD_TEST_GET_POWER  =  0x21, ///< GetPower  command
   

   // special commands for Test System Communication Board
   // CMD_ANAGATE_BOARD_TEST_COM_SET_IOS             = 0xD0, ///< SetIOs command
   // CMD_ANAGATE_BOARD_TEST_COM_GET_ALL_CONFIGS     = 0xD1, ///< GetAllConfigs command
   CMD_ANAGATE_BOARD_TEST_COM_IS_CONFIG_AVAILABLE = 0xD2, ///< IsConfigAvailable command
   CMD_ANAGATE_BOARD_TEST_COM_SEND_FILE           = 0xD3, ///< SendFile command
   CMD_ANAGATE_BOARD_TEST_COM_SEND_FILE_CONTINUED = 0xD4, ///< SendFileContinued command
   CMD_ANAGATE_BOARD_TEST_COM_INSTALL_CONFIG      = 0xD5, ///< InstallConfig command

   CMD_ANAGATE_AWIRE_WRITE_BLOCK  = 0xE0,    ///< WriteBlock command
   CMD_ANAGATE_AWIRE_WRITE_STATUS = 0xE1,    ///< WriteStatus indication
   CMD_ANAGATE_AWIRE_ERASE        = 0xE2,    ///< Erase command
   CMD_ANAGATE_AWIRE_READ         = 0xE3,    ///< Read command
   CMD_ANAGATE_AWIRE_WRITE_USERPAGE  = 0xE4,   ///< Write UserPage command
   CMD_ANAGATE_AWIRE_ERASE_USERPAGE  = 0xE5    ///< Erase UserPage command


};


#define ANAGATE_CMDCODE( cnf_rsp, device, cmd )  \
    ( (((short)(cmd))&0xff) | ((((short)(device))&0x7f)<<8) | (((cnf_rsp)&0x01)<<15) )

#define CNF_RSP 1
#define REQ_IND 0

/** OP-Codes für die TCP/IP-Nachrichten zwischen PC und AnaGate */
enum EAnaGateMsgTyp
{
   OP_I2C_OPEN_REQ          = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_I2C, CMD_ANAGATE_OPEN ),
   OP_I2C_OPEN_CNF          = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_I2C, CMD_ANAGATE_OPEN ),
   OP_I2C_CLOSE_REQ         = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_I2C, CMD_ANAGATE_CLOSE ),
   OP_I2C_CLOSE_CNF         = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_I2C, CMD_ANAGATE_CLOSE ),
   OP_I2C_RESET_REQ         = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_I2C, CMD_ANAGATE_RESET ),
   OP_I2C_RESET_CNF         = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_I2C, CMD_ANAGATE_RESET ),
   OP_I2C_SET_GLOBALS_REQ   = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_I2C, CMD_ANAGATE_SET_GLOBALS ),
   OP_I2C_SET_GLOBALS_CNF   = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_I2C, CMD_ANAGATE_SET_GLOBALS ),
   OP_I2C_GET_GLOBALS_REQ   = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_I2C, CMD_ANAGATE_GET_GLOBALS ),
   OP_I2C_GET_GLOBALS_CNF   = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_I2C, CMD_ANAGATE_GET_GLOBALS ),
   OP_I2C_GET_STATUS_REQ    = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_I2C, CMD_ANAGATE_GET_STATUS ),
   OP_I2C_GET_STATUS_CNF    = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_I2C, CMD_ANAGATE_GET_STATUS ),
   OP_I2C_GET_INFO_REQ      = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_I2C, CMD_ANAGATE_GET_INFO ),
   OP_I2C_GET_INFO_CNF      = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_I2C, CMD_ANAGATE_GET_INFO ),

   OP_I2C_READ_REQ                  = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_I2C, CMD_ANAGATE_I2C_READ ),
   OP_I2C_READ_CNF                  = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_I2C, CMD_ANAGATE_I2C_READ ),
   OP_I2C_WRITE_REQ                 = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_I2C, CMD_ANAGATE_I2C_WRITE ),
   OP_I2C_WRITE_CNF                 = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_I2C, CMD_ANAGATE_I2C_WRITE ),
   OP_I2C_READ_EEPROM_REQ           = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_I2C, CMD_ANAGATE_I2C_READ_EEPROM ),
   OP_I2C_READ_EEPROM_CNF           = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_I2C, CMD_ANAGATE_I2C_READ_EEPROM ),
   OP_I2C_WRITE_EEPROM_REQ          = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_I2C, CMD_ANAGATE_I2C_WRITE_EEPROM ),
   OP_I2C_WRITE_EEPROM_CNF          = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_I2C, CMD_ANAGATE_I2C_WRITE_EEPROM ),
   OP_I2C_SEQUENCE_REQ              = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_I2C, CMD_ANAGATE_I2C_SEQUENCE ),
   OP_I2C_SEQUENCE_CNF              = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_I2C, CMD_ANAGATE_I2C_SEQUENCE ),
   OP_I2C_DIO_READ_REQ              = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_I2C, CMD_ANAGATE_DIO_READ ),
   OP_I2C_DIO_READ_CNF              = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_I2C, CMD_ANAGATE_DIO_READ ),
   OP_I2C_DIO_WRITE_REQ             = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_I2C, CMD_ANAGATE_DIO_WRITE ),
   OP_I2C_DIO_WRITE_CNF             = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_I2C, CMD_ANAGATE_DIO_WRITE ),
   OP_I2C_RAW_START_REQ             = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_I2C, CMD_ANAGATE_I2C_RAW_START ),
   OP_I2C_RAW_START_CNF             = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_I2C, CMD_ANAGATE_I2C_RAW_START ),
   OP_I2C_RAW_SEND_REQ              = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_I2C, CMD_ANAGATE_I2C_RAW_SEND ),
   OP_I2C_RAW_SEND_CNF              = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_I2C, CMD_ANAGATE_I2C_RAW_SEND ),
   OP_I2C_RAW_GET_REQ               = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_I2C, CMD_ANAGATE_I2C_RAW_GET ),
   OP_I2C_RAW_GET_CNF               = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_I2C, CMD_ANAGATE_I2C_RAW_GET ),
   OP_I2C_RAW_STOP_REQ              = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_I2C, CMD_ANAGATE_I2C_RAW_STOP ),
   OP_I2C_RAW_STOP_CNF              = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_I2C, CMD_ANAGATE_I2C_RAW_STOP ),
   OP_I2C_WRITE_EEPROM_POLL_ACK_REQ = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_I2C, CMD_ANAGATE_I2C_WRITE_EEPROM_POLL_ACK ),
   OP_I2C_WRITE_EEPROM_POLL_ACK_CNF = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_I2C, CMD_ANAGATE_I2C_WRITE_EEPROM_POLL_ACK ),

   OP_CAN_OPEN_REQ          = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_CAN, CMD_ANAGATE_OPEN ),
   OP_CAN_OPEN_CNF          = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_CAN, CMD_ANAGATE_OPEN ),
   OP_CAN_CLOSE_REQ         = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_CAN, CMD_ANAGATE_CLOSE ),
   OP_CAN_CLOSE_CNF         = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_CAN, CMD_ANAGATE_CLOSE ),
   OP_CAN_DATA_REQ          = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_CAN, CMD_ANAGATE_DATA ),
   OP_CAN_DATA_CNF          = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_CAN, CMD_ANAGATE_DATA ),
   OP_CAN_DATA_IND          = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_CAN, CMD_ANAGATE_DATA ),
   OP_CAN_DATA_RSP          = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_CAN, CMD_ANAGATE_DATA ),
   OP_CAN_SET_CONFIG_REQ    = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_CAN, CMD_ANAGATE_SET_CONFIG ),
   OP_CAN_SET_CONFIG_CNF    = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_CAN, CMD_ANAGATE_SET_CONFIG ),
   OP_CAN_GET_CONFIG_REQ    = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_CAN, CMD_ANAGATE_GET_CONFIG ),
   OP_CAN_GET_CONFIG_CNF    = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_CAN, CMD_ANAGATE_GET_CONFIG ),
   OP_CAN_SET_GLOBALS_REQ   = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_CAN, CMD_ANAGATE_SET_GLOBALS ),
   OP_CAN_SET_GLOBALS_CNF   = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_CAN, CMD_ANAGATE_SET_GLOBALS ),
   OP_CAN_GET_GLOBALS_REQ   = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_CAN, CMD_ANAGATE_GET_GLOBALS ),
   OP_CAN_GET_GLOBALS_CNF   = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_CAN, CMD_ANAGATE_GET_GLOBALS ),
   OP_CAN_GET_INFO_REQ      = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_CAN, CMD_ANAGATE_GET_INFO ),
   OP_CAN_GET_INFO_CNF      = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_CAN, CMD_ANAGATE_GET_INFO ),
   OP_CAN_GET_STATUS_REQ    = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_CAN, CMD_ANAGATE_GET_STATUS ),
   OP_CAN_GET_STATUS_CNF    = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_CAN, CMD_ANAGATE_GET_STATUS ),
   OP_CAN_SET_TIME_REQ      = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_CAN, CMD_ANAGATE_SET_TIME ),
   OP_CAN_SET_TIME_CNF      = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_CAN, CMD_ANAGATE_SET_TIME ),
   OP_CAN_GET_TIME_REQ      = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_CAN, CMD_ANAGATE_GET_TIME ),
   OP_CAN_GET_TIME_CNF      = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_CAN, CMD_ANAGATE_GET_TIME ),

   OP_CAN_DIO_READ_REQ      = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_CAN, CMD_ANAGATE_DIO_READ ),
   OP_CAN_DIO_READ_CNF      = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_CAN, CMD_ANAGATE_DIO_READ ),
   OP_CAN_DIO_WRITE_REQ     = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_CAN, CMD_ANAGATE_DIO_WRITE ),
   OP_CAN_DIO_WRITE_CNF     = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_CAN, CMD_ANAGATE_DIO_WRITE ),
   OP_CAN_AIO_READ_REQ      = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_CAN, CMD_ANAGATE_AIO_READ ),
   OP_CAN_AIO_READ_CNF      = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_CAN, CMD_ANAGATE_AIO_READ ),
   OP_CAN_AIO_WRITE_REQ     = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_CAN, CMD_ANAGATE_AIO_WRITE ),
   OP_CAN_AIO_WRITE_CNF     = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_CAN, CMD_ANAGATE_AIO_WRITE ),

   OP_CAN_SET_FILTER_REQ              = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_CAN, CMD_ANAGATE_CAN_SET_FILTER ),
   OP_CAN_SET_FILTER_CNF              = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_CAN, CMD_ANAGATE_CAN_SET_FILTER ),
   OP_CAN_GET_FILTER_REQ              = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_CAN, CMD_ANAGATE_CAN_GET_FILTER ),
   OP_CAN_GET_FILTER_CNF              = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_CAN, CMD_ANAGATE_CAN_GET_FILTER ),
   OP_CAN_GET_POWERSTATUS_REQ         = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_CAN, CMD_ANAGATE_CAN_GET_POWERSTATUS ),
   OP_CAN_GET_POWERSTATUS_CNF         = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_CAN, CMD_ANAGATE_CAN_GET_POWERSTATUS ),
   OP_CAN_SET_POWERRELAY_REQ          = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_CAN, CMD_ANAGATE_CAN_SET_POWERRELAY ),
   OP_CAN_SET_POWERRELAY_CNF          = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_CAN, CMD_ANAGATE_CAN_SET_POWERRELAY ),
   OP_CAN_SET_POWERACTIVESUPPLIES_REQ = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_CAN, CMD_ANAGATE_CAN_SET_POWERACTIVESUPPLIES ),
   OP_CAN_SET_POWERACTIVESUPPLIES_CNF = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_CAN, CMD_ANAGATE_CAN_SET_POWERACTIVESUPPLIES ),

   OP_CAN_ZCARD_PI_DATA_IND = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_CAN, CMD_ANAGATE_ZCARD_PI_DATA ),
   OP_CAN_SET_ZCARD_PI_REQ  = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_CAN, CMD_ANAGATE_SET_ZCARD_PI ),
   OP_CAN_SET_ZCARD_PI_CNF  = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_CAN, CMD_ANAGATE_SET_ZCARD_PI ),
   OP_CAN_GET_ZCARD_PI_REQ  = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_CAN, CMD_ANAGATE_GET_ZCARD_PI ),
   OP_CAN_GET_ZCARD_PI_CNF  = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_CAN, CMD_ANAGATE_GET_ZCARD_PI ),
   OP_CAN_RESTART_REQ       = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_CAN, CMD_ANAGATE_RESTART ),
   OP_CAN_RESTART_CNF       = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_CAN, CMD_ANAGATE_RESTART ),
   OP_CAN_ALIVE_REQ         = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_CAN, CMD_ANAGATE_ALIVE ),
   OP_CAN_ALIVE_CNF         = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_CAN, CMD_ANAGATE_ALIVE ),
   
   OP_CANOPEN_SET_CONFIG_REQ      = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_CAN, CMD_ANAGATE_CANOPEN_SET_CONFIG ),
   OP_CANOPEN_SET_CONFIG_CNF      = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_CAN, CMD_ANAGATE_CANOPEN_SET_CONFIG ),
   OP_CANOPEN_GET_CONFIG_REQ      = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_CAN, CMD_ANAGATE_CANOPEN_GET_CONFIG ),
   OP_CANOPEN_GET_CONFIG_CNF      = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_CAN, CMD_ANAGATE_CANOPEN_GET_CONFIG ),
   OP_CANOPEN_SYNC_MODE_REQ       = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_CAN, CMD_ANAGATE_CANOPEN_SYNC_MODE ),
   OP_CANOPEN_SYNC_MODE_CNF       = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_CAN, CMD_ANAGATE_CANOPEN_SYNC_MODE ),
   OP_CANOPEN_NMT_REQ             = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_CAN, CMD_ANAGATE_CANOPEN_NMT ),
   OP_CANOPEN_NMT_CNF             = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_CAN, CMD_ANAGATE_CANOPEN_NMT ),
   OP_CANOPEN_SYNC_REQ            = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_CAN, CMD_ANAGATE_CANOPEN_SYNC ),
   OP_CANOPEN_SYNC_CNF            = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_CAN, CMD_ANAGATE_CANOPEN_SYNC ),
   OP_CANOPEN_SYNC_IND            = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_CAN, CMD_ANAGATE_CANOPEN_SYNC ),
   OP_CANOPEN_TIME_REQ            = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_CAN, CMD_ANAGATE_CANOPEN_TIME ),
   OP_CANOPEN_TIME_CNF            = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_CAN, CMD_ANAGATE_CANOPEN_TIME ),
   OP_CANOPEN_EMCY_IND            = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_CAN, CMD_ANAGATE_CANOPEN_EMCY ),
   OP_CANOPEN_PDO_REQ             = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_CAN, CMD_ANAGATE_CANOPEN_PDO ),
   OP_CANOPEN_PDO_CNF             = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_CAN, CMD_ANAGATE_CANOPEN_PDO ),
   OP_CANOPEN_PDO_IND             = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_CAN, CMD_ANAGATE_CANOPEN_PDO ),
   OP_CANOPEN_SDO_READ_REQ        = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_CAN, CMD_ANAGATE_CANOPEN_SDO_READ ),
   OP_CANOPEN_SDO_READ_CNF        = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_CAN, CMD_ANAGATE_CANOPEN_SDO_READ ),
   OP_CANOPEN_SDO_WRITE_REQ       = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_CAN, CMD_ANAGATE_CANOPEN_SDO_WRITE ),
   OP_CANOPEN_SDO_WRITE_CNF       = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_CAN, CMD_ANAGATE_CANOPEN_SDO_WRITE ),
   OP_CANOPEN_SDO_READ_BLOCK_REQ  = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_CAN, CMD_ANAGATE_CANOPEN_SDO_READ_BLOCK ),
   OP_CANOPEN_SDO_READ_BLOCK_CNF  = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_CAN, CMD_ANAGATE_CANOPEN_SDO_READ_BLOCK ),
   OP_CANOPEN_SDO_WRITE_BLOCK_REQ = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_CAN, CMD_ANAGATE_CANOPEN_SDO_WRITE_BLOCK ),
   OP_CANOPEN_SDO_WRITE_BLOCK_CNF = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_CAN, CMD_ANAGATE_CANOPEN_SDO_WRITE_BLOCK ),
   OP_CANOPEN_GUARD_IND           = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_CAN, CMD_ANAGATE_CANOPEN_GUARD ),
   OP_CANOPEN_UNDEFINED_IND       = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_CAN, CMD_ANAGATE_CANOPEN_UNDEFINED ),

   OP_DIGIO_OPEN_REQ        = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_DIGIO, CMD_ANAGATE_OPEN ),
   OP_DIGIO_OPEN_CNF        = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_DIGIO, CMD_ANAGATE_OPEN ),
   OP_DIGIO_CLOSE_REQ       = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_DIGIO, CMD_ANAGATE_CLOSE ),
   OP_DIGIO_CLOSE_CNF       = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_DIGIO, CMD_ANAGATE_CLOSE ),
   OP_DIGIO_READ_REQ        = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_DIGIO, CMD_ANAGATE_DIO_READ ),
   OP_DIGIO_READ_CNF        = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_DIGIO, CMD_ANAGATE_DIO_READ ),
   OP_DIGIO_WRITE_REQ       = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_DIGIO, CMD_ANAGATE_DIO_WRITE ),
   OP_DIGIO_WRITE_CNF       = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_DIGIO, CMD_ANAGATE_DIO_WRITE ),

   OP_AD_OPEN_REQ          = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_AD, CMD_ANAGATE_OPEN ),
   OP_AD_OPEN_CNF          = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_AD, CMD_ANAGATE_OPEN ),
   OP_AD_CLOSE_REQ         = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_AD, CMD_ANAGATE_CLOSE ),
   OP_AD_CLOSE_CNF         = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_AD, CMD_ANAGATE_CLOSE ),
   OP_AD_READ_REQ          = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_AD, CMD_ANAGATE_AD_READ ),
   OP_AD_READ_CNF          = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_AD, CMD_ANAGATE_AD_READ ),
   OP_AD_DIO_READ_REQ      = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_AD, CMD_ANAGATE_DIO_READ ),
   OP_AD_DIO_READ_CNF      = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_AD, CMD_ANAGATE_DIO_READ ),
   OP_AD_DIO_WRITE_REQ     = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_AD, CMD_ANAGATE_DIO_WRITE ),
   OP_AD_DIO_WRITE_CNF     = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_AD, CMD_ANAGATE_DIO_WRITE ),

   OP_RS232_OPEN_REQ        = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_RS232, CMD_ANAGATE_OPEN ),
   OP_RS232_OPEN_CNF        = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_RS232, CMD_ANAGATE_OPEN ),
   OP_RS232_DATA_REQ        = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_RS232, CMD_ANAGATE_DATA ),
   OP_RS232_DATA_CNF        = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_RS232, CMD_ANAGATE_DATA ),
   OP_RS232_DATA_IND        = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_RS232, CMD_ANAGATE_DATA ),
   OP_RS232_DATA_RSP        = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_RS232, CMD_ANAGATE_DATA ),
   OP_RS232_CLOSE_REQ       = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_RS232, CMD_ANAGATE_CLOSE ),
   OP_RS232_CLOSE_CNF       = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_RS232, CMD_ANAGATE_CLOSE ),
   OP_RS232_GET_INFO_REQ    = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_RS232, CMD_ANAGATE_GET_INFO ),
   OP_RS232_GET_INFO_CNF    = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_RS232, CMD_ANAGATE_GET_INFO ),
   OP_RS232_GET_STATUS_REQ  = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_RS232, CMD_ANAGATE_GET_STATUS ),
   OP_RS232_GET_STATUS_CNF  = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_RS232, CMD_ANAGATE_GET_STATUS ),
   OP_RS232_DIO_READ_REQ    = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_RS232, CMD_ANAGATE_DIO_READ ),
   OP_RS232_DIO_READ_CNF    = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_RS232, CMD_ANAGATE_DIO_READ ),
   OP_RS232_DIO_WRITE_REQ   = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_RS232, CMD_ANAGATE_DIO_WRITE ),
   OP_RS232_DIO_WRITE_CNF   = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_RS232, CMD_ANAGATE_DIO_WRITE ),

   OP_SPI_OPEN_REQ          = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_SPI, CMD_ANAGATE_OPEN ),
   OP_SPI_OPEN_CNF          = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_SPI, CMD_ANAGATE_OPEN ),
   OP_SPI_CLOSE_REQ         = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_SPI, CMD_ANAGATE_CLOSE ),
   OP_SPI_CLOSE_CNF         = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_SPI, CMD_ANAGATE_CLOSE ),
   OP_SPI_SET_GLOBALS_REQ   = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_SPI, CMD_ANAGATE_SET_GLOBALS ),
   OP_SPI_SET_GLOBALS_CNF   = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_SPI, CMD_ANAGATE_SET_GLOBALS ),
   OP_SPI_GET_GLOBALS_REQ   = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_SPI, CMD_ANAGATE_GET_GLOBALS ),
   OP_SPI_GET_GLOBALS_CNF   = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_SPI, CMD_ANAGATE_GET_GLOBALS ),
   OP_SPI_GET_STATUS_REQ    = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_SPI, CMD_ANAGATE_GET_STATUS ),
   OP_SPI_GET_STATUS_CNF    = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_SPI, CMD_ANAGATE_GET_STATUS ),
   OP_SPI_GET_INFO_REQ      = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_SPI, CMD_ANAGATE_GET_INFO ),
   OP_SPI_GET_INFO_CNF      = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_SPI, CMD_ANAGATE_GET_INFO ),
   OP_SPI_DATA_REQ          = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_SPI, CMD_ANAGATE_DATA ),
   OP_SPI_DATA_CNF          = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_SPI, CMD_ANAGATE_DATA ),
   OP_SPI_DIO_READ_REQ      = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_SPI, CMD_ANAGATE_DIO_READ ),
   OP_SPI_DIO_READ_CNF      = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_SPI, CMD_ANAGATE_DIO_READ ),
   OP_SPI_DIO_WRITE_REQ     = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_SPI, CMD_ANAGATE_DIO_WRITE ),
   OP_SPI_DIO_WRITE_CNF     = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_SPI, CMD_ANAGATE_DIO_WRITE ),
   OP_SPI_SEQUENCE_REQ      = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_SPI, CMD_ANAGATE_I2C_SEQUENCE ),
   OP_SPI_SEQUENCE_CNF      = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_SPI, CMD_ANAGATE_I2C_SEQUENCE ),

   OP_RENESAS_OPEN_REQ      = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_RENESAS, CMD_ANAGATE_OPEN ),
   OP_RENESAS_OPEN_CNF      = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_RENESAS, CMD_ANAGATE_OPEN ),
   OP_RENESAS_CLOSE_REQ     = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_RENESAS, CMD_ANAGATE_CLOSE ),
   OP_RENESAS_CLOSE_CNF     = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_RENESAS, CMD_ANAGATE_CLOSE ),
   OP_RENESAS_GET_INFO_REQ  = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_RENESAS, CMD_ANAGATE_GET_INFO ),
   OP_RENESAS_GET_INFO_CNF  = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_RENESAS, CMD_ANAGATE_GET_INFO ),
   OP_RENESAS_DIO_READ_REQ  = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_RENESAS, CMD_ANAGATE_DIO_READ ),
   OP_RENESAS_DIO_READ_CNF  = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_RENESAS, CMD_ANAGATE_DIO_READ ),
   OP_RENESAS_DIO_WRITE_REQ = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_RENESAS, CMD_ANAGATE_DIO_WRITE ),
   OP_RENESAS_DIO_WRITE_CNF = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_RENESAS, CMD_ANAGATE_DIO_WRITE ),

   OP_RENESAS_INIT_REQ          = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_RENESAS, CMD_ANAGATE_RENESAS_INIT ),
   OP_RENESAS_INIT_CNF          = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_RENESAS, CMD_ANAGATE_RENESAS_INIT ),
   OP_RENESAS_CHECK_ID_REQ      = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_RENESAS, CMD_ANAGATE_RENESAS_CHECK_ID ),
   OP_RENESAS_CHECK_ID_CNF      = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_RENESAS, CMD_ANAGATE_RENESAS_CHECK_ID ),
   OP_RENESAS_SET_BAUD_REQ      = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_RENESAS, CMD_ANAGATE_RENESAS_SET_BAUD ),
   OP_RENESAS_SET_BAUD_CNF      = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_RENESAS, CMD_ANAGATE_RENESAS_SET_BAUD ),
   OP_RENESAS_PAGE_READ_REQ     = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_RENESAS, CMD_ANAGATE_RENESAS_PAGE_READ ),
   OP_RENESAS_PAGE_READ_CNF     = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_RENESAS, CMD_ANAGATE_RENESAS_PAGE_READ ),
   OP_RENESAS_ERASE_ALL_REQ     = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_RENESAS, CMD_ANAGATE_RENESAS_ERASE_ALL ),
   OP_RENESAS_ERASE_ALL_CNF     = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_RENESAS, CMD_ANAGATE_RENESAS_ERASE_ALL ),
   OP_RENESAS_BLOCK_ERASE_REQ   = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_RENESAS, CMD_ANAGATE_RENESAS_BLOCK_ERASE ),
   OP_RENESAS_BLOCK_ERASE_CNF   = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_RENESAS, CMD_ANAGATE_RENESAS_BLOCK_ERASE ),
   OP_RENESAS_PAGE_PROG_REQ     = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_RENESAS, CMD_ANAGATE_RENESAS_PAGE_PROG ),
   OP_RENESAS_PAGE_PROG_CNF     = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_RENESAS, CMD_ANAGATE_RENESAS_PAGE_PROG ),
   OP_RENESAS_GET_VERS_REQ      = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_RENESAS, CMD_ANAGATE_RENESAS_GET_VERS ),
   OP_RENESAS_GET_VERS_CNF      = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_RENESAS, CMD_ANAGATE_RENESAS_GET_VERS ),
   OP_RENESAS_COMPLETE_REQ      = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_RENESAS, CMD_ANAGATE_RENESAS_COMPLETE ),
   OP_RENESAS_COMPLETE_CNF      = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_RENESAS, CMD_ANAGATE_RENESAS_COMPLETE ),
   OP_RENESAS_VERIFY_CHK_REQ    = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_RENESAS, CMD_ANAGATE_RENESAS_VERIFYCHK ),
   OP_RENESAS_VERIFY_CHK_CNF    = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_RENESAS, CMD_ANAGATE_RENESAS_VERIFYCHK ),

   OP_DISPLAY_SET_BITMAP_REQ  = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_DISPLAY, CMD_ANAGATE_DISPLAY_SET_BITMAP ),
   OP_DISPLAY_SET_BITMAP_CNF  = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_DISPLAY, CMD_ANAGATE_DISPLAY_SET_BITMAP ),
   OP_DISPLAY_GET_BITMAP_REQ  = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_DISPLAY, CMD_ANAGATE_DISPLAY_GET_BITMAP ),
   OP_DISPLAY_GET_BITMAP_CNF  = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_DISPLAY, CMD_ANAGATE_DISPLAY_GET_BITMAP ),

   OP_DISPLAY_SET_CONFIG_REQ  = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_DISPLAY, CMD_ANAGATE_DISPLAY_SET_CONFIG ),
   OP_DISPLAY_SET_CONFIG_CNF  = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_DISPLAY, CMD_ANAGATE_DISPLAY_SET_CONFIG ),
   OP_DISPLAY_GET_CONFIG_REQ  = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_DISPLAY, CMD_ANAGATE_DISPLAY_GET_CONFIG ),
   OP_DISPLAY_GET_CONFIG_CNF  = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_DISPLAY, CMD_ANAGATE_DISPLAY_GET_CONFIG ),

   OP_DISPLAY_SWITCH_OFF_REQ  = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_DISPLAY, CMD_ANAGATE_DISPLAY_SWITCH_OFF ),
   OP_DISPLAY_SWITCH_OFF_CNF  = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_DISPLAY, CMD_ANAGATE_DISPLAY_SWITCH_OFF ),

   OP_DISPLAY_ALIVE_REQ       = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_DISPLAY, CMD_ANAGATE_DISPLAY_ALIVE ),
   OP_DISPLAY_ALIVE_CNF       = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_DISPLAY, CMD_ANAGATE_DISPLAY_ALIVE ),
   OP_DISPLAY_ALIVE_IND       = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_DISPLAY, CMD_ANAGATE_DISPLAY_ALIVE ),
   OP_DISPLAY_ALIVE_RSP       = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_DISPLAY, CMD_ANAGATE_DISPLAY_ALIVE ),

   OP_BOARD_TEST_IO_SET_ANALOG_REQ = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_BOARD_TEST_IO, CMD_ANAGATE_BOARD_TEST_SET_ANALOG ),
   OP_BOARD_TEST_IO_SET_ANALOG_CNF = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_BOARD_TEST_IO, CMD_ANAGATE_BOARD_TEST_SET_ANALOG ),
   OP_BOARD_TEST_IO_GET_ANALOG_REQ = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_BOARD_TEST_IO, CMD_ANAGATE_BOARD_TEST_GET_ANALOG ),
   OP_BOARD_TEST_IO_GET_ANALOG_CNF = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_BOARD_TEST_IO, CMD_ANAGATE_BOARD_TEST_GET_ANALOG ),
   OP_BOARD_TEST_IO_SET_POWER_REQ  = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_BOARD_TEST_IO, CMD_ANAGATE_BOARD_TEST_SET_POWER ),
   OP_BOARD_TEST_IO_SET_POWER_CNF  = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_BOARD_TEST_IO, CMD_ANAGATE_BOARD_TEST_SET_POWER ),
   OP_BOARD_TEST_IO_GET_POWER_REQ  = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_BOARD_TEST_IO, CMD_ANAGATE_BOARD_TEST_GET_POWER ),
   OP_BOARD_TEST_IO_GET_POWER_CNF  = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_BOARD_TEST_IO, CMD_ANAGATE_BOARD_TEST_GET_POWER ),

   OP_BOARD_TEST_PWR_SET_ANALOG_REQ = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_BOARD_TEST_PWR, CMD_ANAGATE_BOARD_TEST_SET_ANALOG ),
   OP_BOARD_TEST_PWR_SET_ANALOG_CNF = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_BOARD_TEST_PWR, CMD_ANAGATE_BOARD_TEST_SET_ANALOG ),
   OP_BOARD_TEST_PWR_GET_ANALOG_REQ = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_BOARD_TEST_PWR, CMD_ANAGATE_BOARD_TEST_GET_ANALOG ),
   OP_BOARD_TEST_PWR_GET_ANALOG_CNF = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_BOARD_TEST_PWR, CMD_ANAGATE_BOARD_TEST_GET_ANALOG ),

   OP_BOARD_TEST_COM_SET_CONFIG_REQ          = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_BOARD_TEST_COM, CMD_ANAGATE_SET_CONFIG ),
   OP_BOARD_TEST_COM_SET_CONFIG_CNF          = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_BOARD_TEST_COM, CMD_ANAGATE_SET_CONFIG ),
   OP_BOARD_TEST_COM_GET_CONFIG_REQ          = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_BOARD_TEST_COM, CMD_ANAGATE_GET_CONFIG ),
   OP_BOARD_TEST_COM_GET_CONFIG_CNF          = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_BOARD_TEST_COM, CMD_ANAGATE_GET_CONFIG ),
   // OP_BOARD_TEST_COM_GET_ALL_CONFIGS_REQ     = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_BOARD_TEST_COM, CMD_ANAGATE_BOARD_TEST_COM_GET_ALL_CONFIGS ),
   // OP_BOARD_TEST_COM_GET_ALL_CONFIGS_CNF     = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_BOARD_TEST_COM, CMD_ANAGATE_BOARD_TEST_COM_GET_ALL_CONFIGS ),
   // OP_BOARD_TEST_COM_SET_IOS_REQ             = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_BOARD_TEST_COM, CMD_ANAGATE_BOARD_TEST_COM_SET_IOS ),
   // OP_BOARD_TEST_COM_SET_IOS_CNF             = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_BOARD_TEST_COM, CMD_ANAGATE_BOARD_TEST_COM_SET_IOS ),
   OP_BOARD_TEST_COM_IS_CONFIG_AVAILABLE_REQ = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_BOARD_TEST_COM, CMD_ANAGATE_BOARD_TEST_COM_IS_CONFIG_AVAILABLE ),
   OP_BOARD_TEST_COM_IS_CONFIG_AVAILABLE_CNF = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_BOARD_TEST_COM, CMD_ANAGATE_BOARD_TEST_COM_IS_CONFIG_AVAILABLE ),
   OP_BOARD_TEST_COM_SEND_FILE_REQ           = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_BOARD_TEST_COM, CMD_ANAGATE_BOARD_TEST_COM_SEND_FILE ),
   OP_BOARD_TEST_COM_SEND_FILE_CNF           = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_BOARD_TEST_COM, CMD_ANAGATE_BOARD_TEST_COM_SEND_FILE ),
   OP_BOARD_TEST_COM_SEND_FILE_CONTINUED_REQ = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_BOARD_TEST_COM, CMD_ANAGATE_BOARD_TEST_COM_SEND_FILE_CONTINUED ),
   OP_BOARD_TEST_COM_SEND_FILE_CONTINUED_CNF = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_BOARD_TEST_COM, CMD_ANAGATE_BOARD_TEST_COM_SEND_FILE_CONTINUED ),
   OP_BOARD_TEST_COM_INSTALL_CONFIG_REQ      = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_BOARD_TEST_COM, CMD_ANAGATE_BOARD_TEST_COM_INSTALL_CONFIG ),
   OP_BOARD_TEST_COM_INSTALL_CONFIG_CNF      = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_BOARD_TEST_COM, CMD_ANAGATE_BOARD_TEST_COM_INSTALL_CONFIG ),

   OP_AWIRE_SET_CONFIG_REQ   = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_AWIRE, CMD_ANAGATE_SET_CONFIG ),
   OP_AWIRE_SET_CONFIG_CNF   = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_AWIRE, CMD_ANAGATE_SET_CONFIG ),
   OP_AWIRE_GET_CONFIG_REQ   = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_AWIRE, CMD_ANAGATE_GET_CONFIG ),
   OP_AWIRE_GET_CONFIG_CNF   = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_AWIRE, CMD_ANAGATE_GET_CONFIG ),
   OP_AWIRE_WRITE_BLOCK_REQ  = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_AWIRE, CMD_ANAGATE_AWIRE_WRITE_BLOCK ),
   // OP_AWIRE_WRITE_BLOCK_CNF  = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_AWIRE, CMD_ANAGATE_AWIRE_WRITE_BLOCK ),
   OP_AWIRE_WRITE_USERPAGE_REQ  = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_AWIRE, CMD_ANAGATE_AWIRE_WRITE_USERPAGE ),
   OP_AWIRE_WRITE_STATUS_IND = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_AWIRE, CMD_ANAGATE_AWIRE_WRITE_STATUS ),
   // OP_AWIRE_WRITE_STATUS_RSP = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_AWIRE, CMD_ANAGATE_AWIRE_WRITE_STATUS ),
   OP_AWIRE_ERASE_REQ        = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_AWIRE, CMD_ANAGATE_AWIRE_ERASE ),
   OP_AWIRE_ERASE_CNF        = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_AWIRE, CMD_ANAGATE_AWIRE_ERASE ),
   OP_AWIRE_ERASE_USERPAGE_REQ        = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_AWIRE, CMD_ANAGATE_AWIRE_ERASE_USERPAGE ),
   OP_AWIRE_ERASE_USERPAGE_CNF        = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_AWIRE, CMD_ANAGATE_AWIRE_ERASE_USERPAGE ),
   OP_AWIRE_READ_REQ         = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_AWIRE, CMD_ANAGATE_AWIRE_READ ),
   OP_AWIRE_READ_CNF         = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_AWIRE, CMD_ANAGATE_AWIRE_READ ),
   
   OP_BOARD_TEST_RELAY_SET_RELAY_REQ  = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_BOARD_TEST_RELAY, CMD_ANAGATE_BOARD_TEST_SET_RELAY ),
   OP_BOARD_TEST_RELAY_SET_RELAY_CNF  = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_BOARD_TEST_RELAY, CMD_ANAGATE_BOARD_TEST_SET_RELAY ),
   OP_BOARD_TEST_RELAY_GET_BUTTON_REQ = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_BOARD_TEST_RELAY, CMD_ANAGATE_BOARD_TEST_GET_BUTTON ),
   OP_BOARD_TEST_RELAY_GET_BUTTON_CNF = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_BOARD_TEST_RELAY, CMD_ANAGATE_BOARD_TEST_GET_BUTTON ),
   OP_BOARD_TEST_RELAY_SET_POWER_REQ  = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_BOARD_TEST_RELAY, CMD_ANAGATE_BOARD_TEST_SET_POWER ),
   OP_BOARD_TEST_RELAY_SET_POWER_CNF  = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_BOARD_TEST_RELAY, CMD_ANAGATE_BOARD_TEST_SET_POWER ),
   OP_BOARD_TEST_RELAY_GET_POWER_REQ  = ANAGATE_CMDCODE( REQ_IND, DEVICE_ANAGATE_BOARD_TEST_RELAY, CMD_ANAGATE_BOARD_TEST_GET_POWER ),
   OP_BOARD_TEST_RELAY_GET_POWER_CNF  = ANAGATE_CMDCODE( CNF_RSP, DEVICE_ANAGATE_BOARD_TEST_RELAY, CMD_ANAGATE_BOARD_TEST_GET_POWER )
};

#ifndef __ZILOG__
#pragma pack(1)
#endif // __ZILOG__

struct SAnaGateDeviceInfo
{
   AnaInt32 m_nSWVersion;      ///< Software version (firmware)
   AnaInt32 m_nHWVersion;      ///< Hardware version
   AnaInt8  m_sSerial[4];      ///< Serial number of AnaGate device
   AnaInt8  m_sMACAddr[6];     ///< MAC-Address of AnaGate device
   AnaInt8  m_nDeviceID;       ///< device id of AnaGate device (AnaGate platform)
   AnaInt8  m_nSWDerivateID;   ///< Software derivate id (0 = classic software)
};

#ifndef __ZILOG__
#pragma pack()
#endif // __ZILOG__

#endif // #ifndef AnaGate_h
